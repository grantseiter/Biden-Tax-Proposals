// ===========================================================#
// Title: "CG_death_cfn"
// File_Author: "Grant M. Seiter -- American Enterprise Institute"
// Date: "September 2020"
// Notes: "Tax unrealized capital gains at death"
          "CALCFUNCS LINES 305-347"
// ===========================================================#

@iterate_jit(nopython=True)
def CapGains(p23250, p22250, sep, ALD_StudentLoan_hc,
             ALD_InvInc_ec_rt, invinc_ec_base,
             e00200, e00300, e00600, e00650, e00700, e00800,
             CG_nodiff, CG_ec, CG_reinvest_ec_rt,
             ALD_BusinessLosses_c, MARS,
             e00900, e01100, e01200, e01400, e01700, e02000, e02100,
             e02300, e00400, e02400, c02900, e03210, e03230, e03240,
             c01000, c23650, ymod, ymod1, invinc_agi_ec, gains_at_death,
             CG_death, CG_death_ec):
    """
    CapGains function: ...
    """
    # compute taxable portion of capital gains at death (gains_at_death - CG_death_ec)
    # not reflected in current law and records modified with tax at death imputation
    if CG_death is True:
      taxable_gains_at_death = max(0., gains_at_death - CG_death_ec[MARS-1])
    else:
      taxable_gains_at_death = 0.
    # net capital gain (long term + short term + gains at death) before exclusion
    c23650 = p23250 + p22250 + taxable_gains_at_death
    # limitation on capital losses
    c01000 = max((-3000. / sep), c23650)
    # compute total investment income
    invinc = e00300 + e00600 + c01000 + e01100 + e01200
    # compute exclusion of investment income from AGI
    invinc_agi_ec = ALD_InvInc_ec_rt * max(0., invinc_ec_base)
    # compute ymod1 variable that is included in AGI
    ymod1 = (e00200 + e00700 + e00800 + e01400 + e01700 +
             invinc - invinc_agi_ec + e02100 + e02300 +
             max(e00900 + e02000, -ALD_BusinessLosses_c[MARS - 1]))
    if CG_nodiff:
        # apply QDIV+CG exclusion if QDIV+LTCG receive no special tax treatment
        qdcg_pos = max(0., e00650 + c01000)
        qdcg_exclusion = (min(CG_ec, qdcg_pos) +
                          CG_reinvest_ec_rt * max(0., qdcg_pos - CG_ec))
        ymod1 = max(0., ymod1 - qdcg_exclusion)
        invinc_agi_ec += qdcg_exclusion
    # compute ymod variable that is used in OASDI benefit taxation logic
    ymod2 = e00400 + (0.50 * e02400) - c02900
    ymod3 = (1. - ALD_StudentLoan_hc) * e03210 + e03230 + e03240
    ymod = ymod1 + ymod2 + ymod3
    return (c01000, c23650, ymod, ymod1, invinc_agi_ec, gains_at_death,
      taxable_gains_at_death)
